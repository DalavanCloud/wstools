#!/usr/bin/python

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

import os
import sys
import codecs
from argparse import ArgumentParser
from icu import UNICODE_VERSION, ICU_VERSION, VERSION

try:
    from wstools.dbl import DBL
except ImportError:
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'lib', 'wstools')))
    from dbl import DBL


def main():
    parser = ArgumentParser(
        description='Find exemplars for LDML files')
    parser.add_argument('project', nargs='+', help='DBL project zip file')
    parser.add_argument('--version', action='version',
                        version='%(prog)s: Unicode: {} ICU: {} PyICU: {}'.format(UNICODE_VERSION,
                                                                                 ICU_VERSION,
                                                                                 VERSION))
    args = parser.parse_args()

    dbl = DBL()

    # The following are example of how to set the lists of exemplars
    # from content taken from a LDML file.
    dbl.exemplars.main = ''
    dbl.exemplars.auxiliary = ''
    dbl.exemplars.index = ''
    dbl.exemplars.punctuation = ''
    dbl.exemplars.digits = ''

    # Find exemplars in the data.
    for project in args.project:
        if project.endswith('.zip'):
            dbl.open_project(project)
            dbl.process_project()
            dbl.close_project()
        else:
            with codecs.open(project, 'r', encoding='utf-8') as textfile:
                for line in textfile:
                    dbl.exemplars.process(line)
    dbl.analyze_projects()

    # Display the exemplars.
    print dbl.exemplars.main
    print dbl.exemplars.auxiliary
    print dbl.exemplars.index
    print dbl.exemplars.punctuation
    print dbl.exemplars.digits
    print dbl.exemplars.graphemes
    print dbl.exemplars.script
    # print '{}: {}'.format(project, dbl.exemplars.script)


if __name__ == '__main__':
    main()
